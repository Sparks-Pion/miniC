Grammar

    0 $accept: exp $end

    1 exp: exp '+' exp
    2    | exp '-' exp
    3    | NUM


Terminals, with rules where they appear

    $end (0) 0
    '+' (43) 1
    '-' (45) 2
    error (256)
    NUM <ival> (258) 3


Nonterminals, with rules where they appear

    $accept (6)
        on left: 0
    exp <ival> (7)
        on left: 1 2 3
        on right: 0 1 2


State 0

    0 $accept: . exp $end

    NUM  shift, and go to state 1

    exp  go to state 2


State 1

    3 exp: NUM .

    $default  reduce using rule 3 (exp)


State 2

    0 $accept: exp . $end
    1 exp: exp . '+' exp
    2    | exp . '-' exp

    $end  shift, and go to state 3
    '-'   shift, and go to state 4
    '+'   shift, and go to state 5


State 3

    0 $accept: exp $end .

    $default  accept


State 4

    2 exp: exp '-' . exp

    NUM  shift, and go to state 1

    exp  go to state 6


State 5

    1 exp: exp '+' . exp

    NUM  shift, and go to state 1

    exp  go to state 7


State 6

    1 exp: exp . '+' exp
    2    | exp . '-' exp
    2    | exp '-' exp .

    '+'  shift, and go to state 5

    $default  reduce using rule 2 (exp)

    Conflict between rule 2 and token '-' resolved as reduce (%left '-').
    Conflict between rule 2 and token '+' resolved as shift ('-' < '+').


State 7

    1 exp: exp . '+' exp
    1    | exp '+' exp .
    2    | exp . '-' exp

    $default  reduce using rule 1 (exp)

    Conflict between rule 1 and token '-' resolved as reduce ('-' < '+').
    Conflict between rule 1 and token '+' resolved as reduce (%left '+').
